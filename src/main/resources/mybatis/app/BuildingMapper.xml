<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.dlj.app.dao.BuildingDao">

	<insert id="add" parameterType="cn.dlj.app.entity.Building" keyColumn="id" useGeneratedKeys="true" keyProperty="id">
		insert into t_building(stationId,name,birthdate,workTime,obligation,lxname,telphone,isControl,classification,areaa,acreage,jzheight,ground,underground,evacuationA,evacuationB,evacuationC,structure,refractory,facilityA,isTrain,addTime,modTime,addIp,userId,townId,departmentId,bimg,message,app_id)
		values(#{stationId},#{name},#{birthdate},#{workTime},#{obligation},#{lxname},#{telphone},#{isControl},#{classification},#{areaa},#{acreage},#{jzheight},#{ground},#{underground},#{evacuationA},#{evacuationB},#{evacuationC},#{structure},#{refractory},#{facilityA},#{isTrain},#{addTime},#{modTime},#{addIp},#{userId},#{townId},#{departmentId},#{bimg},#{message},#{appBuildingId})
	</insert>
	
	<update id="update" parameterType="cn.dlj.app.entity.Building" >
		update t_building set
			name= #{name},
			stationId= #{stationId}, 
			birthdate= #{birthdate}, 
			workTime= #{workTime}, 
			obligation = #{obligation}, 
			lxname= #{lxname}, 
			telphone= #{telphone}, 
			isControl= #{isControl}, 
			classification= #{classification}, 
			areaa= #{areaa}, 
			acreage= #{acreage}, 
			jzheight= #{jzheight}, 
			ground= #{ground}, 
			underground= #{underground}, 
			evacuationA= #{evacuationA}, 
			evacuationB= #{evacuationB}, 
			evacuationC= #{evacuationC}, 
			structure= #{structure}, 
			refractory= #{refractory},
			facilityA= #{facilityA}, 
			isTrain= #{isTrain},
			bimg= #{bimg},
			addTime= #{addTime},
			modTime= #{modTime}, 
			addIp= #{addIp},
			userId= #{userId}, 
			townId= #{townId}, 
			departmentId= #{departmentId}, 
			message= #{message},
			app_id= #{appBuildingId}
		where id=#{id}
	</update>
	
	<!-- 通过名称获取建筑物 -->
	<select id="get" resultType="cn.dlj.app.entity.Building">
		select
				id 					as "id",
				stationId 			as "stationId",
				name 				as "name",
				birthdate 			as "birthdate",
				workTime 			as "workTime",
				obligation			as "obligation",
				lxname				as "lxname",
				telphone			as "telphone",
				isControl			as "isControl",
				classification		as "classification",
				areaa				as "areaa",
				acreage				as "acreage",
				jzheight			as "jzheight",
				ground				as "ground",
				underground			as "underground",
				evacuationA			as "evacuationA",
				evacuationB			as "evacuationB",
				evacuationC			as "evacuationC",
				structure			as "structure",
				refractory			as "refractory",
				facilityA			as "facilityA",
				isTrain				as "isTrain",
				addTime				as "addTime",
				modTime				as "modTime",
				addIp				as "addIp",
				userId				as "userId",
				townId				as "townId",
				departmentId		as "departmentId",
				bimg				as "bimg",
				message				as "message",
				app_id				as "appBuildingId"
		from t_building
		<where>
			name=#{name}
		</where>
	</select>
	
	<!-- 通过名称获取建筑物 -->
	<select id="getById" resultType="cn.dlj.app.entity.Building">
		select
				id 					as "id",
				stationId 			as "stationId",
				name 				as "name",
				birthdate 			as "birthdate",
				workTime 			as "workTime",
				obligation			as "obligation",
				lxname				as "lxname",
				telphone			as "telphone",
				isControl			as "isControl",
				classification		as "classification",
				areaa				as "areaa",
				acreage				as "acreage",
				jzheight			as "jzheight",
				ground				as "ground",
				underground			as "underground",
				evacuationA			as "evacuationA",
				evacuationB			as "evacuationB",
				evacuationC			as "evacuationC",
				structure			as "structure",
				refractory			as "refractory",
				facilityA			as "facilityA",
				isTrain				as "isTrain",
				addTime				as "addTime",
				modTime				as "modTime",
				addIp				as "addIp",
				userId				as "userId",
				townId				as "townId",
				departmentId		as "departmentId",
				bimg				as "bimg",
				message				as "message",
				app_id				as "appBuildingId"
		from t_building
		<where>
			id=#{id}
		</where>
	</select>
	
	<select id="getPaging" parameterType="cn.dlj.utils.PagingMySql" resultType="cn.dlj.app.entity.Building">
		select
				bui.id 					as "id",
				bui.stationId 			as "stationId",
				bui.name 				as "name",
				bui.birthdate 			as "birthdate",
				bui.workTime 			as "workTime",
				bui.obligation			as "obligation",
				bui.lxname				as "lxname",
				bui.telphone			as "telphone",
				bui.isControl			as "isControl",
				bui.classification		as "classification",
				bui.areaa				as "areaa",
				bui.acreage				as "acreage",
				bui.jzheight			as "jzheight",
				bui.ground				as "ground",
				bui.underground			as "underground",
				bui.evacuationA			as "evacuationA",
				bui.evacuationB			as "evacuationB",
				bui.evacuationC			as "evacuationC",
				bui.structure			as "structure",
				bui.refractory			as "refractory",
				bui.facilityA			as "facilityA",
				bui.isTrain				as "isTrain",
				bui.addTime				as "addTime",
				bui.modTime				as "modTime",
				bui.addIp				as "addIp",
				bui.userId				as "userId",
				bui.townId				as "townId",
				bui.departmentId		as "departmentId",
				bui.bimg				as "bimg",
				bui.message				as "message",
				u.name					as "userName",
				t.name					as "townName",
				dep.name				as "departmentName"
		from t_building	bui
		left join t_user u on u.id=bui.userId
		left join t_town t on t.id=bui.townId
		left join t_department dep  on dep.id=bui.departmentId
		<where>
			bui.townId = #{params.townId}
			<if test="null!=params.userId"> and bui.userId=#{params.userId}</if>
			<if test="null!=params.buildName"> and (bui.name like #{params.buildName} or bui.obligation like #{params.obligation})</if>
		</where>
		order by bui.birthdate desc
		limit #{first},#{pageSize}
	</select>
	
</mapper>
